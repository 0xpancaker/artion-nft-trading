/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PriceOracle, PriceOracleInterface } from "../PriceOracle";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    name: "assetToOracle",
    outputs: [
      {
        internalType: "contract INFTOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "_token",
        type: "address",
      },
    ],
    name: "getPriceOfNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "_asset",
        type: "address",
      },
    ],
    name: "removeOracleForAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721[]",
        name: "_assets",
        type: "address[]",
      },
      {
        internalType: "contract INFTOracle[]",
        name: "_oracles",
        type: "address[]",
      },
    ],
    name: "setOracleForAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610eb98061010d6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100d85780639080ddb1146100f6578063c2b8c5e814610112578063f2fde38b146101425761007d565b806304fb0b56146100825780632e00d2451461009e578063715018a6146100ce575b600080fd5b61009c60048036038101906100979190610877565b61015e565b005b6100b860048036038101906100b39190610968565b610338565b6040516100c591906109f4565b60405180910390f35b6100d661036b565b005b6100e061037f565b6040516100ed9190610a1e565b60405180910390f35b610110600480360381019061010b9190610968565b6103a8565b005b61012c60048036038101906101279190610968565b610432565b6040516101399190610a52565b60405180910390f35b61015c60048036038101906101579190610a99565b6105e5565b005b610166610668565b8181905084849050146101ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a590610b23565b60405180910390fd5b60005b8484905081101561033157600073ffffffffffffffffffffffffffffffffffffffff168383838181106101e7576101e6610b43565b5b90506020020160208101906101fc9190610bb0565b73ffffffffffffffffffffffffffffffffffffffff1603610252576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024990610c29565b60405180910390fd5b82828281811061026557610264610b43565b5b905060200201602081019061027a9190610bb0565b6001600087878581811061029157610290610b43565b5b90506020020160208101906102a69190610968565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808061032990610c78565b9150506101b1565b5050505050565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610373610668565b61037d60006106e6565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103b0610668565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461059c57600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610575573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105999190610cec565b91505b600082116105df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d690610d65565b60405180910390fd5b50919050565b6105ed610668565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361065c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065390610df7565b60405180910390fd5b610665816106e6565b50565b6106706107aa565b73ffffffffffffffffffffffffffffffffffffffff1661068e61037f565b73ffffffffffffffffffffffffffffffffffffffff16146106e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106db90610e63565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126107e1576107e06107bc565b5b8235905067ffffffffffffffff8111156107fe576107fd6107c1565b5b60208301915083602082028301111561081a576108196107c6565b5b9250929050565b60008083601f840112610837576108366107bc565b5b8235905067ffffffffffffffff811115610854576108536107c1565b5b6020830191508360208202830111156108705761086f6107c6565b5b9250929050565b60008060008060408587031215610891576108906107b2565b5b600085013567ffffffffffffffff8111156108af576108ae6107b7565b5b6108bb878288016107cb565b9450945050602085013567ffffffffffffffff8111156108de576108dd6107b7565b5b6108ea87828801610821565b925092505092959194509250565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610923826108f8565b9050919050565b600061093582610918565b9050919050565b6109458161092a565b811461095057600080fd5b50565b6000813590506109628161093c565b92915050565b60006020828403121561097e5761097d6107b2565b5b600061098c84828501610953565b91505092915050565b6000819050919050565b60006109ba6109b56109b0846108f8565b610995565b6108f8565b9050919050565b60006109cc8261099f565b9050919050565b60006109de826109c1565b9050919050565b6109ee816109d3565b82525050565b6000602082019050610a0960008301846109e5565b92915050565b610a1881610918565b82525050565b6000602082019050610a336000830184610a0f565b92915050565b6000819050919050565b610a4c81610a39565b82525050565b6000602082019050610a676000830184610a43565b92915050565b610a7681610918565b8114610a8157600080fd5b50565b600081359050610a9381610a6d565b92915050565b600060208284031215610aaf57610aae6107b2565b5b6000610abd84828501610a84565b91505092915050565b600082825260208201905092915050565b7f494e565f4c454e47544800000000000000000000000000000000000000000000600082015250565b6000610b0d600a83610ac6565b9150610b1882610ad7565b602082019050919050565b60006020820190508181036000830152610b3c81610b00565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b7d82610918565b9050919050565b610b8d81610b72565b8114610b9857600080fd5b50565b600081359050610baa81610b84565b92915050565b600060208284031215610bc657610bc56107b2565b5b6000610bd484828501610b9b565b91505092915050565b7f494e565f4f5241434c4500000000000000000000000000000000000000000000600082015250565b6000610c13600a83610ac6565b9150610c1e82610bdd565b602082019050919050565b60006020820190508181036000830152610c4281610c06565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c8382610a39565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610cb557610cb4610c49565b5b600182019050919050565b610cc981610a39565b8114610cd457600080fd5b50565b600081519050610ce681610cc0565b92915050565b600060208284031215610d0257610d016107b2565b5b6000610d1084828501610cd7565b91505092915050565b7f4e4f5f5052494345000000000000000000000000000000000000000000000000600082015250565b6000610d4f600883610ac6565b9150610d5a82610d19565b602082019050919050565b60006020820190508181036000830152610d7e81610d42565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610de1602683610ac6565b9150610dec82610d85565b604082019050919050565b60006020820190508181036000830152610e1081610dd4565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610e4d602083610ac6565b9150610e5882610e17565b602082019050919050565b60006020820190508181036000830152610e7c81610e40565b905091905056fea2646970667358221220bfe17e0a0b79731566681ad16d007061ead57cbb7048e5e755870517f724672b64736f6c63430008110033";

export class PriceOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PriceOracle> {
    return super.deploy(overrides || {}) as Promise<PriceOracle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PriceOracle {
    return super.attach(address) as PriceOracle;
  }
  connect(signer: Signer): PriceOracle__factory {
    return super.connect(signer) as PriceOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceOracleInterface {
    return new utils.Interface(_abi) as PriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PriceOracle {
    return new Contract(address, _abi, signerOrProvider) as PriceOracle;
  }
}
