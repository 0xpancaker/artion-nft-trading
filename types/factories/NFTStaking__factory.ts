/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NFTStaking, NFTStakingInterface } from "../NFTStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftItem",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_priceOracle",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "originalPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "CanLiquidated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardTokens",
        type: "uint256",
      },
    ],
    name: "UnStake",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "originalPrice",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
        ],
        internalType: "struct NFTStaking.Staker",
        name: "_staker",
        type: "tuple",
      },
    ],
    name: "getClaimable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftItem",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "priceOracle",
    outputs: [
      {
        internalType: "contract IPriceOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IRewardToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "stakeNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "originalPrice",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "unStakeNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620016bc380380620016bc83398181016040528101906200003791906200016c565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050620001c8565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001348262000107565b9050919050565b620001468162000127565b81146200015257600080fd5b50565b60008151905062000166816200013b565b92915050565b60008060006060848603121562000188576200018762000102565b5b6000620001988682870162000155565b9350506020620001ab8682870162000155565b9250506040620001be8682870162000155565b9150509250925092565b6114e480620001d86000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a679c2ff1161005b578063a679c2ff14610115578063b5440e2014610131578063d5a44f8614610161578063f7c618c11461019357610088565b8063150b7a021461008d5780632630c12f146100bd5780636eb604e0146100db578063a1e05011146100f7575b600080fd5b6100a760048036038101906100a29190610d5d565b6101b1565b6040516100b49190610e1b565b60405180910390f35b6100c56101c5565b6040516100d29190610e95565b60405180910390f35b6100f560048036038101906100f09190610eb0565b6101eb565b005b6100ff61057a565b60405161010c9190610efe565b60405180910390f35b61012f600480360381019061012a9190610eb0565b61059e565b005b61014b60048036038101906101469190610f82565b61095a565b6040516101589190610fbe565b60405180910390f35b61017b60048036038101906101769190610eb0565b610a7e565b60405161018a93929190610fe8565b60405180910390f35b61019b610ac8565b6040516101a89190611040565b60405180910390f35b600063150b7a0260e01b9050949350505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b815260040161025b9190610fbe565b602060405180830381865afa158015610278573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029c9190611070565b73ffffffffffffffffffffffffffffffffffffffff16146102f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e9906110fa565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c2b8c5e860008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040161036f9190610efe565b602060405180830381865afa15801561038c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b0919061112f565b9050600081116103f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ec906111a8565b60405180910390fd5b60405180606001604052804281526020018281526020013373ffffffffffffffffffffffffffffffffffffffff1681525060036000848152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b88d4fde3330856040518463ffffffff1660e01b81526004016104f493929190611225565b600060405180830381600087803b15801561050e57600080fd5b505af1158015610522573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff167f5af417134f72a9d41143ace85b0a26dce6f550f894f2cbc1eeee8810603d91b6834260405161056e92919061126f565b60405180910390a25050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006003600083815260200190815260200160002060405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090503373ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff161461069c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610693906112e4565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b88d4fde3033856040518463ffffffff1660e01b81526004016106f993929190611225565b600060405180830381600087803b15801561071357600080fd5b505af1158015610727573d6000803e3d6000fd5b5050505060006107368261095a565b905060008111156107d157600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b815260040161079e929190611304565b600060405180830381600087803b1580156107b857600080fd5b505af11580156107cc573d6000803e3d6000fd5b505050505b3373ffffffffffffffffffffffffffffffffffffffff167fdb5446d7bffdeb0b5301ec00f352321da31ef3ee552eca5a1a8c9d59b9ef688084428460405161081b9392919061132d565b60405180910390a26000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c2b8c5e860008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016108a09190610efe565b602060405180830381865afa1580156108bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e1919061112f565b9050600283602001516108f491906113c2565b811015610954573373ffffffffffffffffffffffffffffffffffffffff167f788377a8fe6540f93d308fbbbf7436138133261ab60ba1ca9e559e7183f2dca0854286602001518560405161094b94939291906113f3565b60405180910390a25b50505050565b60008082600001514261096d9190611438565b90506064600c6224ea00836109858760000151610aee565b60ff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c2b8c5e860008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401610a039190610efe565b602060405180830381865afa158015610a20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a44919061112f565b610a4e919061146c565b610a58919061146c565b610a6291906113c2565b610a6c919061146c565b610a76919061146c565b915050919050565b60036020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006224ea008242610b009190611438565b1015610b0f5760009050610b6a565b60066224ea00610b1f919061146c565b8242610b2b9190611438565b1015610b3a5760059050610b6a565b6224ea00600c610b4a919061146c565b8242610b569190611438565b1015610b6557600a9050610b6a565b600f90505b919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bae82610b83565b9050919050565b610bbe81610ba3565b8114610bc957600080fd5b50565b600081359050610bdb81610bb5565b92915050565b6000819050919050565b610bf481610be1565b8114610bff57600080fd5b50565b600081359050610c1181610beb565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610c6a82610c21565b810181811067ffffffffffffffff82111715610c8957610c88610c32565b5b80604052505050565b6000610c9c610b6f565b9050610ca88282610c61565b919050565b600067ffffffffffffffff821115610cc857610cc7610c32565b5b610cd182610c21565b9050602081019050919050565b82818337600083830152505050565b6000610d00610cfb84610cad565b610c92565b905082815260208101848484011115610d1c57610d1b610c1c565b5b610d27848285610cde565b509392505050565b600082601f830112610d4457610d43610c17565b5b8135610d54848260208601610ced565b91505092915050565b60008060008060808587031215610d7757610d76610b79565b5b6000610d8587828801610bcc565b9450506020610d9687828801610bcc565b9350506040610da787828801610c02565b925050606085013567ffffffffffffffff811115610dc857610dc7610b7e565b5b610dd487828801610d2f565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610e1581610de0565b82525050565b6000602082019050610e306000830184610e0c565b92915050565b6000819050919050565b6000610e5b610e56610e5184610b83565b610e36565b610b83565b9050919050565b6000610e6d82610e40565b9050919050565b6000610e7f82610e62565b9050919050565b610e8f81610e74565b82525050565b6000602082019050610eaa6000830184610e86565b92915050565b600060208284031215610ec657610ec5610b79565b5b6000610ed484828501610c02565b91505092915050565b6000610ee882610e62565b9050919050565b610ef881610edd565b82525050565b6000602082019050610f136000830184610eef565b92915050565b600080fd5b600060608284031215610f3457610f33610f19565b5b610f3e6060610c92565b90506000610f4e84828501610c02565b6000830152506020610f6284828501610c02565b6020830152506040610f7684828501610bcc565b60408301525092915050565b600060608284031215610f9857610f97610b79565b5b6000610fa684828501610f1e565b91505092915050565b610fb881610be1565b82525050565b6000602082019050610fd36000830184610faf565b92915050565b610fe281610ba3565b82525050565b6000606082019050610ffd6000830186610faf565b61100a6020830185610faf565b6110176040830184610fd9565b949350505050565b600061102a82610e62565b9050919050565b61103a8161101f565b82525050565b60006020820190506110556000830184611031565b92915050565b60008151905061106a81610bb5565b92915050565b60006020828403121561108657611085610b79565b5b60006110948482850161105b565b91505092915050565b600082825260208201905092915050565b7f4e4f545f4f574e45525f4f465f4e465400000000000000000000000000000000600082015250565b60006110e460108361109d565b91506110ef826110ae565b602082019050919050565b60006020820190508181036000830152611113816110d7565b9050919050565b60008151905061112981610beb565b92915050565b60006020828403121561114557611144610b79565b5b60006111538482850161111a565b91505092915050565b7f4f5241434c455f4e4f545f534554000000000000000000000000000000000000600082015250565b6000611192600e8361109d565b915061119d8261115c565b602082019050919050565b600060208201905081810360008301526111c181611185565b9050919050565b600082825260208201905092915050565b7f3078303000000000000000000000000000000000000000000000000000000000600082015250565b600061120f6004836111c8565b915061121a826111d9565b602082019050919050565b600060808201905061123a6000830186610fd9565b6112476020830185610fd9565b6112546040830184610faf565b818103606083015261126581611202565b9050949350505050565b60006040820190506112846000830185610faf565b6112916020830184610faf565b9392505050565b7f4e4f545f5354414b455200000000000000000000000000000000000000000000600082015250565b60006112ce600a8361109d565b91506112d982611298565b602082019050919050565b600060208201905081810360008301526112fd816112c1565b9050919050565b60006040820190506113196000830185610fd9565b6113266020830184610faf565b9392505050565b60006060820190506113426000830186610faf565b61134f6020830185610faf565b61135c6040830184610faf565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113cd82610be1565b91506113d883610be1565b9250826113e8576113e7611364565b5b828204905092915050565b60006080820190506114086000830187610faf565b6114156020830186610faf565b6114226040830185610faf565b61142f6060830184610faf565b95945050505050565b600061144382610be1565b915061144e83610be1565b925082820390508181111561146657611465611393565b5b92915050565b600061147782610be1565b915061148283610be1565b925082820261149081610be1565b915082820484148315176114a7576114a6611393565b5b509291505056fea26469706673582212204e863589964005ae63d49f1f7472283ce51bc04a54a9339506950cb1fbbe66ec64736f6c63430008110033";

export class NFTStaking__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _nftItem: string,
    _token: string,
    _priceOracle: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTStaking> {
    return super.deploy(
      _nftItem,
      _token,
      _priceOracle,
      overrides || {}
    ) as Promise<NFTStaking>;
  }
  getDeployTransaction(
    _nftItem: string,
    _token: string,
    _priceOracle: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _nftItem,
      _token,
      _priceOracle,
      overrides || {}
    );
  }
  attach(address: string): NFTStaking {
    return super.attach(address) as NFTStaking;
  }
  connect(signer: Signer): NFTStaking__factory {
    return super.connect(signer) as NFTStaking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTStakingInterface {
    return new utils.Interface(_abi) as NFTStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTStaking {
    return new Contract(address, _abi, signerOrProvider) as NFTStaking;
  }
}
